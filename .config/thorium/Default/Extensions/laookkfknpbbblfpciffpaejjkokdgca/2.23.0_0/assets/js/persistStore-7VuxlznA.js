import{c as a,D as e,M as t,u as s,w as o}from"./dynamic-import-helper-Gh3O-GNF.js";const d=(d,{mode:i=t.Sync,path:n="",responseProperty:c,syncAutomatically:l=!1,fixStateBeforeLoad:r}={})=>{const p=a(!1),u=a(!1),y=a(!1);let h=!1,w=null;const m=a=>{0!==a.length&&a.forEach((a=>f.add(a)))},v=async a=>{await b.update(P.$id,a,{appendIdToPath:!1})},$=async(a,e=!0)=>{await s(y).toBe(!1),y.value=!0,e&&await s(p).toBe(!0),m(Object.keys(a)),j.$state={...j.$state,...a},await v(a),y.value=!1},f=new Set,b=new e("main",{mode:i,path:n}),P=d({loadedRef:p,loadingRef:u,updatingRef:y,updateAsync:$,refresh:async(a=!1)=>{a||!p.value&&!u.value?w=(async()=>{try{h?u.value||(u.value=!0,await b.refresh({id:P.$id,appendIdToPath:!1,timestampKey:P.$id})):await g()}catch(a){console.error(a),u.value=!1}})():await w}}),j=P(),g=()=>new Promise((a=>{j.$subscribe((a=>{p.value&&"payload"in a&&(m(Object.keys(a.payload)),v(a.payload))})),Object.keys(j.$state).forEach((a=>o((()=>j[a]),(async e=>{p.value&&(f.has(a)?f.delete(a):await b.update(P.$id,{[a]:e},{appendIdToPath:!1}))})))),u.value=!0,h=!0,b.get({id:P.$id,success:e=>{e&&(m(Object.keys(e)),j.$state={...j.$state,...e}),(async()=>{if(r){const a=await r(j.$state);Object.keys(a).length&&await $(a,!1)}p.value=!0,u.value=!1,a()})()},failure:a=>{u.value=!1,console.error(a)},appendIdToPath:!1,responseProperty:c,timestampKey:P.$id})}));return l&&g(),P};export{d as p};