import{s as i,A as t,k as e,l as s,J as o,m as n}from"./FlashMessage-BIzq9sd2.js";import{V as a}from"./ValueWithRandom-CRpe0OcH.js";import"./flashMessageQueue-CiwsHFUx.js";import"./dynamic-import-helper-Gh3O-GNF.js";import"./array-YYQw31d9.js";import"./main-DaaZyiXy.js";import"./Logger-DgjqecXr.js";import"./string-DLOjEt1Y.js";import"./info-DdD9a7JK.js";import"./globalKeyEventManager-DTQSIy-h.js";import"./icon-close-DRlspKs3.js";import"./_plugin-vue2_normalizer-DeUNqxFl.js";import"./AnimationOptions-BeQrIOaG.js";class l{constructor(){this.enable=!1,this.speed=0,this.decay=0,this.sync=!1}load(t){t&&(void 0!==t.enable&&(this.enable=t.enable),void 0!==t.speed&&(this.speed=i(t.speed)),void 0!==t.decay&&(this.decay=i(t.decay)),void 0!==t.sync&&(this.sync=t.sync))}}class r extends a{constructor(){super(),this.animation=new l,this.direction="clockwise",this.enable=!1,this.value=0}load(i){super.load(i),i&&(this.animation.load(i.animation),void 0!==i.direction&&(this.direction=i.direction),void 0!==i.enable&&(this.enable=i.enable))}}const c=2*Math.PI;class d{constructor(i){this.container=i}getTransformValues(i){var t;const e=(null==(t=i.tilt)?void 0:t.enable)&&i.tilt;return{b:e?Math.cos(e.value)*e.cosDirection:void 0,c:e?Math.sin(e.value)*e.sinDirection:void 0}}init(i){var n;const a=i.options.tilt;if(!a)return;i.tilt={enable:a.enable,value:t(e(a.value)),sinDirection:s()>=o?1:-1,cosDirection:s()>=o?1:-1,min:0,max:c};let l=a.direction;if("random"===l){l=Math.floor(2*s())>0?"counter-clockwise":"clockwise"}switch(l){case"counter-clockwise":case"counterClockwise":i.tilt.status="decreasing";break;case"clockwise":i.tilt.status="increasing"}const r=null==(n=i.options.tilt)?void 0:n.animation;(null==r?void 0:r.enable)&&(i.tilt.decay=1-e(r.decay),i.tilt.velocity=e(r.speed)/360*this.container.retina.reduceFactor,r.sync||(i.tilt.velocity*=s()))}isEnabled(i){var t;const e=null==(t=i.options.tilt)?void 0:t.animation;return!i.destroyed&&!i.spawning&&!!(null==e?void 0:e.enable)}loadOptions(i,...t){i.tilt||(i.tilt=new r);for(const e of t)i.tilt.load(null==e?void 0:e.tilt)}async update(i,t){this.isEnabled(i)&&i.tilt&&(n(i,i.tilt,!1,"none",t),await Promise.resolve())}}export{d as TiltUpdater};