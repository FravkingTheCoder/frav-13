import{v as s,C as e,E as o,o as a,A as t,n as r}from"./dynamic-import-helper-Gh3O-GNF.js";import{r as n}from"./onboarding-BnjvsMNe.js";import{a as i}from"./authService-DSVbm6Rd.js";var c="https://www.momentumdash.com/",l=(s=>(s.Google="google",s.Apple="apple",s))(l||{});const m=t=>new Promise(((r,n)=>{var i;s.post("user/sso-state-uuid",{name:(null==(i=localStorage.getObject("login:data"))?void 0:i.name)??"",source:"extension",sourceUri:location.origin}).then((({data:s})=>{const i=`${c}sso/${t}?state=${s.id}`;e()||o()?location.href=i:a(i,"momo-extension-sso-login","popup"),window.addEventListener("message",(s=>{s.data&&"ssoResponseCallback"in s.data&&("otp"in s.data.ssoResponseCallback||"convertUnregistered"===s.data.ssoResponseCallback.ssoOutcome?r(s.data.ssoResponseCallback):n("Could not login using sso. no OTL parameters received"))}))}),n)})),p=s=>{console.error(s),r.$emit("flashMessage",{message:"Oops, we weren't able to use that login. Please try again.",error:!0})},d=async(s,e)=>{t.capture("sso third party success",{feature:"third party sso",type:e,sso_outcome:s.ssoOutcome}),"convertUnregistered"===s.ssoOutcome?(await i.onSuccessfulUserLogin(),await n()):location.search=new URLSearchParams(s).toString()};export{l as S,p as a,m as i,d as o};