import{a4 as e,e as t,a5 as o}from"./dynamic-import-helper-Gh3O-GNF.js";import{loadTodoAddin as a}from"./addin-DZOZrGoe.js";import"./array-YYQw31d9.js";import"./main-DaaZyiXy.js";import"./Logger-DgjqecXr.js";import"./string-DLOjEt1Y.js";import"./modal-D5eTjgvI.js";import"./enums-Cgv4i8uw.js";import"./tasksViewState-DusFQxW4.js";import"./ViewState-CalcjAWV.js";import"./appZStack-CXXM5U-T.js";import"./handlebarLoader-xbtIzd6B.js";const r=e(""),s=t("todoStats",{state:()=>({loaded:!1}),getters:{todoCompletedSince(){return e=>{if(!this.loaded)return 0;if(r.value)return 0;const t=localStorage.getItem("todolist-1");if(!t)return 0;const o=t.split(",").reduce(((e,t)=>Object.assign(e,(e=>{const t=localStorage.getItem(e),o={};return t?(t.split(",").forEach((t=>{o[t]=localStorage.getObject(`${e}-${t}`)})),o):o})("todo-"+t))),{});return Object.values(o).filter((t=>t.done&&new Date(t.completedDate).getTime()>e)).length}},unsupportedMetrics:()=>r.value?["todoCompletedSince"]:[]},actions:{refresh(){(async()=>{await a();const e=m.views.todoPane,t=(await e.manager.getMomoLists()).getListOfType("done"),s=()=>e.todoList.model.activeProvider.get("provider_url");m.on("todo:providerChanged",(()=>{null==t||t.doFetchIfNeeded(!0),r.value=s()})),m.on("todo:loadingStateChange",(()=>o(r))),s()||null==t||t.doFetchIfNeeded(),r.value=s(),this.loaded=!0})()}}}),i=()=>s();export{i as default};