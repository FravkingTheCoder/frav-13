import{e,g as t,u as s,B as i,C as r}from"./dynamic-import-helper-Gh3O-GNF.js";import{L as o}from"./LocalStorageStoreSyncedItem-CtVH-muf.js";import{u as a,a as n}from"./siteBlockerGroups-9WPnbAn4.js";import{S as c,a as p,b as l}from"./constants-Dqx3dGLK.js";import{p as d}from"./promisifiedChrome-YDDyAvDe.js";import{d as u,F as g}from"./focusModeState-D4CLHiD7.js";import{useFocusModeDashViewStateStore as j}from"./focusModeViewState-B4fUYtwj.js";import{u as h}from"./pomodoroCompleted-PtbKLdeQ.js";import{g as S}from"./focusModeHelpers-CbYS8k-X.js";import{computed as f}from"./reactiveCustomization-CaJFMm70.js";import{o as b,a as w}from"./modal-D5eTjgvI.js";import{s as v}from"./enums-Cgv4i8uw.js";import"./array-YYQw31d9.js";import"./main-DaaZyiXy.js";import"./Logger-DgjqecXr.js";import"./string-DLOjEt1Y.js";import"./compareObjects-BF7sSNEf.js";import"./ViewState-CalcjAWV.js";import"./appZStack-CXXM5U-T.js";import"./VueBase-CYtBAh2Z.js";import"./_commonjsHelpers-B3K3fdV-.js";import"./ClickOutside-DCLvi2fj.js";import"./pinia-CCjyjLnb.js";import"./portal-vue.esm-BTKM9g0x.js";import"./PomodoroTimers-CyrfcuWH.js";import"./persistStore-7VuxlznA.js";import"./constants-BfBD_H-d.js";import"./login-kENE0gaj.js";import"./authService-DSVbm6Rd.js";import"./auth-D2YAhF74.js";import"./legacyUserMigration-DJj0rzI-.js";import"./migrateLegacyUserMessageHandler-FH_m4diU.js";import"./onboarding-Bdvt2O8-.js";const k=new o(c,!1),B=new o(p,""),y=e("siteBlockerSession",{state:()=>({active:k.currentValue,hasPermissions:!1}),getters:{urls:()=>[...a().items.reduce(((e,t)=>t.enabled?(n().getWebsitesByGroup(t).filter((e=>e.enabled)).forEach((t=>e.add(t.hostWithWildcard))),e):e),new Set([]))].join(" "),settingsEnabled:()=>f.siteBlockerVisible,focusModeEnabledAndFocusModeSettingActive:()=>u.currentValue&&S().apps.siteBlocker.enabled&&j().activeViewId===g.Focusing.toString(),featureEnabled:()=>m.conditionalFeatures.featureEnabled("site-blocker")||u.currentValue,activeAndBlockingUrls:e=>e.active&&e.hasPermissions&&0!==a().items.length},actions:{toggleActive(e){const t=e??!this.active;t&&this.checkSiteBlockerFeatureDisabledAndOpenUpsell()||(t&&this.registerOrUpdateContentScript(),this.active=t)},async ensurePermissions(e=!1){return this.hasPermissions?await this.registerOrUpdateContentScript():b(l,{source:"Site Blocker",reason:"To block sites while focusing",requestImmediately:e,extraInstructions:r()?' Please select "Always allow on every website..."':"",watchPermissionCheck:!0}).then((async e=>!!e&&(this.hasPermissions=!0,await this.registerOrUpdateContentScript(),!0)))},async registerOrUpdateContentScript(){if(!t().scripting)return;return!!(await t().scripting.getRegisteredContentScripts()).length||await new Promise((e=>{t().scripting.registerContentScripts([{id:"site-blocker",js:["/content-scripts/siteBlocker.js"],matches:["*://*/*"],runAt:"document_start"}],(()=>e(!0)))}))},checkSiteBlockerFeatureDisabledAndOpenUpsell(){return!this.featureEnabled&&(w(v.UPSELL_SITE_BLOCKER,"site-blocker"),!0)}}});(async()=>{const e=y(),r=a(),o=n(),c=h(),m=j();k.switchOverToWatchedStoreItem((()=>e.active)),t().permissions&&d.permissions.contains(l).then((t=>{e.hasPermissions=t,t&&e.active&&e.registerOrUpdateContentScript()})),await s((()=>c.loaded)).toBe(!0),u.currentValue&&await s((()=>m.activeViewId)).toBe(g.Focusing),i([()=>u.currentValue,()=>e.focusModeEnabledAndFocusModeSettingActive,()=>c.anyFocusTimerActive,()=>c.playing,()=>e.featureEnabled,()=>e.settingsEnabled],(([t,s,i,r,o,a])=>{o&&a||e.toggleActive(!1),t&&(s&&i&&r?e.toggleActive(!0):e.toggleActive(!1))})),await s((()=>r.loaded)).toBe(!0),await s((()=>o.loaded)).toBe(!0),B.switchOverToWatchedStoreItem((()=>e.urls))})();export{y as default};